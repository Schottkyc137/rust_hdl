# ยง 11: Concurrent Statements

BlockHeader: !Sequence
  - node: GenericClause
    optional: true
  - node: GenericMapAspect
    optional: true
  - token: SemiColon
    optional: true
    name: generic_semi_colon
  - node: PortClause
    optional: true
  - node: PortMapAspect
    optional: true
  - token: SemiColon
    optional: true
    name: port_semi_colon

BlockStatement: !Sequence
  - node: Label
  - keyword: Block
  - node: Expression
    parenthesized: true
    optional: true
    name: condition
  - keyword: Is
    optional: true
  - node: BlockHeader
  - node: Declarations
  - keyword: Begin
  - node: ConcurrentStatements
  - keyword: End
  - keyword: Block
    name: trailing_block
  - token: Identifier
    name: trailing_label
    optional: true
  - token: SemiColon

ConcurrentStatements: !Sequence
  - node: ConcurrentStatement
    repeated: true

CaseGenerateAlternative: !Sequence
  - keyword: When
  - node: Label
  - node: Choices
  - token: RightArrow
  - node: GenerateStatementBody

CaseGenerateStatement: !Sequence
  - node: Label
  - keyword: Case
  - node: Expression
  - keyword: Generate
  - node: CaseGenerateAlternative
    repeated: true
  - keyword: End
  - keyword: Generate
    name: trailing_generate
  - token: Identifier
    name: trailing_generate_label
    optional: true
  - token: SemiColon

ComponentInstantiationStatement: !Sequence
  - node: Label
  - node: InstantiatedUnit
  - node: GenericMapAspect
    optional: true
  - node: PortMapAspect
    optional: true
  - token: SemiColon

ConcurrentAssertionStatement: !Sequence
  - node: Label
  - keyword: Postponed
    optional: true
  - node: Assertion
  - token: SemiColon

ConcurrentConditionalSignalAssignment: !Sequence
  - node: Target
  - token: LTE
  - keyword: Guarded
    optional: true
  - node: DelayMechanism
    optional: true
  - node: ConditionalWaveforms
  - token: SemiColon

ConcurrentProcedureCallStatement: !Sequence
  - node: Label
  - keyword: Postponed
    optional: true
  - node: ProcedureCall
  - token: SemiColon

ConcurrentSelectedSignalAssignment: !Sequence
  - keyword: With
  - node: Expression
  - keyword: Select
  - token: Que
    optional: true
  - node: Target
  - token: LTE
  - keyword: Guarded
    optional: true
  - node: DelayMechanism
    optional: true
  - node: SelectedWaveforms
  - token: SemiColon

ConcurrentSignalAssignmentChoice: !Choice
  - node: ConcurrentSimpleSignalAssignment
  - node: ConcurrentConditionalSignalAssignment
  - node: ConcurrentSelectedSignalAssignment

ConcurrentSignalAssignmentStatement: !Sequence
  - node: Label
  - keyword: Postponed
    optional: true
  - node: ConcurrentSignalAssignmentChoice

ConcurrentSimpleSignalAssignment: !Sequence
  - node: Target
  - token: LTE
  - keyword: Guarded
    optional: true
  - node: DelayMechanism
    optional: true
  - node: Waveform
  - token: SemiColon

ConcurrentStatement: !Choice
  - node: BlockStatement
  - node: ProcessStatement
  - node: ConcurrentProcedureCallStatement
  - node: ConcurrentAssertionStatement
  - node: ConcurrentSignalAssignmentStatement
  - node: ComponentInstantiationStatement
  - node: GenerateStatement
  - node: PslDirective

ForGenerateStatement: !Sequence
  - node: Label
  - keyword: For
  - node: ParameterSpecification
  - keyword: Generate
  - node: GenerateStatementBody
  - keyword: End
  - keyword: Generate
    name: trailing_generate_token
  - token: Identifier
    name: trailing_generate_label
    optional: true
  - token: SemiColon

GenerateStatement: !Choice
  - node: ForGenerateStatement
  - node: IfGenerateStatement
  - node: CaseGenerateStatement

GenerateStatementBody: !Sequence
  - node: Declarations
    optional: true
  - keyword: Begin
    optional: true
  - node: ConcurrentStatement
    repeated: true
  - keyword: End
    optional: true
  - token: Identifier
    name: alternative_label
    optional: true
  - token: SemiColon
    optional: true

IfGenerateIf: !Sequence
  - keyword: If
  - node: Label
  - node: Expression
    name: condition
  - keyword: Generate
  - node: GenerateStatementBody

IfGenerateElsif: !Sequence
  - keyword: Elsif
  - node: Label
  - node: Expression
  - keyword: Generate
  - node: GenerateStatementBody

IfGenerateElse: !Sequence
  - keyword: Else
  - node: Label
  - keyword: Generate
  - node: GenerateStatementBody

IfGenerateStatement: !Sequence
  - node: Label
  - node: IfGenerateIf
  - node: IfGenerateElsif
    repeated: true
  - node: IfGenerateElse
    optional: true
  - keyword: End
  - keyword: Generate
  - token: Identifier
    name: trailing_generate_label
    optional: true
  - token: SemiColon

InstantiatedUnit: !Choice
  - node: ComponentInstantiatedUnit
  - node: EntityInstantiatedUnit
  - node: ConfigurationInstantiatedUnit

ComponentInstantiatedUnit: !Sequence
  - keyword: Component
    optional: true
  - node: Name

EntityInstantiatedUnit: !Sequence
  - keyword: Entity
  - node: Name
  - token: LeftPar
    optional: true
  - token: Identifier
    optional: true
  - token: RightPar
    optional: true

ConfigurationInstantiatedUnit: !Sequence
  - keyword: Configuration
  - node: Name

AllSensitivityList: !Sequence
  - keyword: All

ProcessSensitivityList: !Choice
  - node: AllSensitivityList
  - node: NameList

ProcessStatement: !Sequence
  - node: Label
  - keyword: Postponed
    optional: true
  - keyword: Process
  - node: ProcessSensitivityList
    parenthesized: true
    optional: true
  - keyword: Is
    optional: true
  - node: Declarations
  - keyword: Begin
  - node: ConcurrentStatements
  - keyword: End
  - keyword: Postponed
    optional: true
    name: trailing_postponed
  - keyword: Process
    name: trailing_process
  - token: Identifier
    name: trailing_process_label
    optional: true
  - token: SemiColon
